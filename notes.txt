"rails generate backbone:scaffold ModelName --javascript" will create a lot of boilerplate code for us. it creates a new router each time, so be careful. 

MODEL FETCH
BackboneExample.Models.Example = Backbone.Model.extend({
  urlRoot: 'api/examples/'
});

var example = new BackboneExample.Models.Example({ id: 1 });
// The model must have an id - otherwise Rails doesn't know what to fetch
example.fetch({
  success: function(model, response, options){
  //the success callback recieves the model itself as it's first argument
  },
  error: function(model, response, options){
  //in the error callback, the response argument will have info about the error
  }


MODEL SAVE
BackboneExample.Models.Example = Backbone.Model.extend({
  urlRoot: 'api/examples/'
});

var example = new BackboneExample.Models.Example();
example.save({ title: "Example title" }, {
  success: function(model, response, options){
  //the success callback recieves the model itself as it's first argument
  },
  error: function(model, response, options){
  //in the error callback, the response argument will have info about the error
  }
});

MODEL DELETE
var example = new BackboneExample.Models.Example({ id: 1});
example.delete();

save on a model with no id	POST	controller#create
save on a model that has an id	PUT	controller#update
save on model with id using { patch: true } option	PATCH	controller#update
fetch on a model that has an id	GET	controller#show
destroy on a model that has an id	DELETE	controller#destroy